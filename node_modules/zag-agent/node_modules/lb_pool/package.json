{
  "name": "lb_pool",
  "version": "1.0.1",
  "description": "in-process HTTP load balancer client with retries",
  "repository": {
    "type": "git",
    "url": "https://github.com/Voxer/lb_pool.git"
  },
  "devDependencies": {
    "mocha": ">=1.8.1"
  },
  "readme": "lb_pool\n=======\n\nIn-process HTTP load balancer client with retries and backpressure for node.js.\n\nIf you use HTTP for IPC, or if you consume public APIs with HTTPS, then `lb_pool` can help make your system more reliable, and possibly even faster.\n\n`lb_pool` will use HTTP/1.1 keepalive to all of the available servers, distributing the load while maintaining and reusing TCP connections as appropriate. If a request fails due to a socket error or a user-defined failure condition, the request will be retried on another node. If there are too many pending requests into a pool, new requests are failed immediately to enforce backpressure and guard against cascading failures.\n\nThis module is inspired by and rewritten from [poolee](https://github.com/dannycoates/poolee), which is more actively maintained than `lb_pool`. `lb_pool` is similar in many ways to Twitter's [finagle](https://github.com/twitter/finagle).\n\n# Usage Example\n\n```javascript\n\nvar LB_Pool = require(\"lb_pool\");\n\nvar servers = [\n    \"10.0.0.1:8000\",\n    \"10.0.0.2:8000\",\n    \"10.0.0.3:8000\"\n];\n\nvar auth_pool = new LB_Pool(require(\"http\"), servers, {\n    max_pending: 300,\n    ping: \"/ping\",\n    timeout: 10000,\n    max_sockets: 2,\n    name: \"auth\"\n});\n\nauth_pool.get(\"/api/auth_validate?user=mjr\", function (err, res, body) {\n    // handle error or response\n});\n```\n\n# Consuming external APIs with HTTPS\n\nIf your application consumes public APIs, you can get better performance and reliability by using `lb_pool`:\n\n```javascript\n\nvar LB_Pool = require(\"lb_pool\");\n\nvar servers = [\n    \"api.facebook.com:443\",\n    \"api.facebook.com:443\"\n];\n\nvar auth_pool = new LB_Pool(require(\"https\"), servers, {\n    max_pending: 10,\n    ping: \"/ping\",\n    timeout: 10000,\n    max_sockets: 4,\n    name: \"fb\"\n});\n\nauth_pool.get(\"/me?token=aaaaaaaaaaaa\", function (err, res, body) {\n    // handle error or response\n});\n```\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Voxer/lb_pool/issues"
  },
  "homepage": "https://github.com/Voxer/lb_pool",
  "_id": "lb_pool@1.0.1",
  "_from": "lb_pool@~1.0.1"
}
