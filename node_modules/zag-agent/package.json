{
  "name": "zag-agent",
  "version": "0.0.1",
  "author": {
    "name": "sentientwaffle"
  },
  "description": "send metrics to zag-daemon",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "tap $(find test -name '*.test.js' | sort)"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/voxer/zag.git"
  },
  "homepage": "https://github.com/voxer/zag",
  "keywords": [
    "zag",
    "metrics"
  ],
  "dependencies": {
    "lb_pool": "~1.0.1"
  },
  "devDependencies": {
    "tap": "~0.4.6"
  },
  "readme": "## zag-agent\n\nThe metrics agent sends raw points to the zag-daemons where they will\nbe aggregated.\n\n## API\n\n```javascript\nvar agent = require('zag-agent')([/* list of all metrics daemon \"address:ports\" */])\n```\n\n### `MetricsAgent#counter(String mkey[, Number value])`\n\nIncrement a counter.\n\n```javascript\nagent.counter(\"signup\")\n```\n\nIncrement a counter by a specific value.\n\n```javascript\nagent.counter(\"search_results\", results.length)\n```\n\n### `MetricsAgent#histogram(String mkey, Number value)`\n\nTrack a distribution of values.\nAll histograms automatically get a heat map.\n\n```javascript\nagent.histogram(\"HTTP_server_latency|/index.html\", 123)\n```\n\n### `MetricsAgent#scope(String scope)`\n\nOften times all of the metrics in a particular module should be scoped under\nthe same key. `#scope(key)` returns a `MetricsAgent` that automatically prepends\nthat key:\n\n```javascript\nvar latency = agent.scope(\"http_latency\")\n// This is the same as `agent.counter(\"http_latency>/index.html\")`:\nlatency.counter(\"/index.html\")\n```\n\n`.close()`ing a scoped agent will close the parent agent (they share a socket).\n\n### `MetricsAgent#on(\"error\", function(err) { })`\n\nThe socket emitted an error.\n\n### `MetricsAgent#close()`\n\nClose the socket.\n\n```javascript\nagent.close()\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/voxer/zag/issues"
  },
  "_id": "zag-agent@0.0.1",
  "_from": "zag-agent@"
}
